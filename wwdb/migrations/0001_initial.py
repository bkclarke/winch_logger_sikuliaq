# Generated by Django 4.0.6 on 2022-08-04 12:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('appliedloadlow', models.IntegerField(blank=True, db_column='AppliedLoadLow', null=True)),
                ('tensionlow', models.IntegerField(blank=True, db_column='TensionLow', null=True)),
                ('rawmvlow', models.FloatField(blank=True, db_column='RawmVLow', null=True)),
                ('appliedloadhigh', models.IntegerField(blank=True, db_column='AppliedLoadHigh', null=True)),
                ('tensionhigh', models.IntegerField(blank=True, db_column='TensionHigh', null=True)),
                ('rawmvhigh', models.FloatField(blank=True, db_column='RawmVHigh', null=True)),
            ],
            options={
                'verbose_name_plural': 'Calibration',
                'db_table': 'Calibration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalibrationMeta',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('safetyfactor', models.IntegerField(blank=True, db_column='SafetyFactor', null=True)),
                ('monitoringaccuracy', models.IntegerField(blank=True, db_column='MonitoringAccuracy', null=True)),
            ],
            options={
                'verbose_name_plural': 'CalibrationMeta',
                'db_table': 'CalibrationMeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('startdate', models.DateField(db_column='StartDate')),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('maxtension', models.IntegerField(blank=True, db_column='MaxTension', null=True)),
                ('maxpayout', models.IntegerField(blank=True, db_column='MaxPayout', null=True)),
            ],
            options={
                'verbose_name_plural': 'Cast',
                'db_table': 'Cast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cutbacksretermination',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('dryendtag', models.IntegerField(blank=True, db_column='DryEndTag', null=True)),
                ('wetendtag', models.IntegerField(blank=True, db_column='WetEndTag', null=True)),
                ('lengthremoved', models.IntegerField(blank=True, db_column='LengthRemoved', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('length', models.TextField(blank=True, db_column='Length', null=True)),
            ],
            options={
                'verbose_name_plural': 'CutbacksRetermination',
                'db_table': 'CutbacksRetermination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deploymenttype',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('equipment', models.TextField(blank=True, db_column='Equipment', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'verbose_name_plural': 'DeploymentType',
                'db_table': 'DeploymentType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drum',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('internalid', models.TextField(blank=True, db_column='InternalId', null=True)),
                ('color', models.TextField(blank=True, db_column='Color', null=True)),
                ('size', models.TextField(blank=True, db_column='Size', null=True)),
                ('weight', models.TextField(blank=True, db_column='Weight', null=True)),
                ('material', models.TextField(blank=True, db_column='Material', null=True)),
                ('wiretype', models.TextField(blank=True, db_column='WireType', null=True)),
            ],
            options={
                'verbose_name_plural': 'Drum',
                'db_table': 'Drum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dynomometer',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('dynomometertype', models.TextField(blank=True, db_column='DynomometerType', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
            ],
            options={
                'verbose_name_plural': 'Dynomometer',
                'db_table': 'Dynomometer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('frametype', models.TextField(blank=True, db_column='FrameType', null=True)),
            ],
            options={
                'verbose_name_plural': 'Frame',
                'db_table': 'Frame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
            ],
            options={
                'verbose_name_plural': 'Location',
                'db_table': 'Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lubrication',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('lubetype', models.TextField(blank=True, db_column='LubeType', null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('lubelength', models.IntegerField(blank=True, db_column='LubeLength', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'verbose_name_plural': 'Lubrication',
                'db_table': 'Lubrication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Safeworkinglimit',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('factorofsafety', models.IntegerField(blank=True, db_column='FactorofSafety', null=True)),
            ],
            options={
                'verbose_name_plural': 'SafeWorkingLimit',
                'db_table': 'SafeWorkingLimit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Termination',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('terminationid', models.TextField(blank=True, db_column='TerminationId', null=True)),
            ],
            options={
                'verbose_name_plural': 'Termination',
                'db_table': 'Termination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Winch',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('ship', models.TextField(blank=True, db_column='Ship', null=True)),
                ('institution', models.TextField(blank=True, db_column='Institution', null=True)),
                ('manufacturer', models.TextField(blank=True, db_column='Manufacturer', null=True)),
                ('wiretrainschematicjframe', models.TextField(blank=True, db_column='WireTrainSchematicJFrame', null=True)),
                ('wiretrainschematicaframe', models.TextField(blank=True, db_column='WireTrainSchematicAFrame', null=True)),
            ],
            options={
                'verbose_name_plural': 'Winch',
                'db_table': 'Winch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Winchoperator',
            fields=[
                ('id', models.TextField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('status', models.BooleanField(blank=True, db_column='Status', null=True)),
                ('firstname', models.TextField(blank=True, db_column='FirstName', null=True)),
                ('lastname', models.TextField(blank=True, db_column='LastName', null=True)),
            ],
            options={
                'verbose_name_plural': 'WinchOperator',
                'db_table': 'WinchOperator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wire',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('manufacturerid', models.TextField(blank=True, db_column='ManufacturerId', null=True)),
                ('nsfid', models.TextField(blank=True, db_column='NsfId', null=True)),
                ('dateacquired', models.DateTimeField(blank=True, db_column='DateAcquired', null=True)),
                ('totalbreakingload', models.IntegerField(blank=True, db_column='TotalBreakingLoad', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('length', models.IntegerField(blank=True, db_column='Length', null=True)),
                ('status', models.IntegerField(blank=True, db_column='Status', null=True)),
            ],
            options={
                'verbose_name_plural': 'Wire',
                'db_table': 'Wire',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wiredrum',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'verbose_name_plural': 'WireDrum',
                'db_table': 'WireDrum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WireRopeData',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('manufacturer', models.TextField(blank=True, db_column='Manufacturer', null=True)),
                ('manufacturerpartnumber', models.TextField(blank=True, db_column='ManufacturerPartNumber', null=True)),
                ('cabletype', models.TextField(blank=True, db_column='CableType', null=True)),
                ('nominalbreakingload', models.IntegerField(blank=True, db_column='nominalbreakingload', null=True)),
                ('weightperfoot', models.FloatField(blank=True, db_column='WeightPerFoot', null=True)),
            ],
            options={
                'verbose_name_plural': 'WireRopeData',
                'db_table': 'WireRopeData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wiretermination',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'verbose_name_plural': 'WireTermination',
                'db_table': 'WireTermination',
                'managed': False,
            },
        ),
    ]
